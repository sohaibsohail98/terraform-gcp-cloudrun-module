# Dependencies stage - install only production dependencies
FROM node:20.19.2-alpine3.21 AS deps
WORKDIR /app

# Security: Update Alpine packages and install only essential build tools
RUN apk update && apk upgrade && \
    apk add --no-cache libc6-compat && \
    rm -rf /var/cache/apk/*

# Copy package files
COPY package*.json ./

# Install production dependencies only and clean cache
RUN npm ci --omit=dev --ignore-scripts && \
    npm cache clean --force && \
    rm -rf ~/.npm

# Build stage - install all dependencies and build
FROM node:20.19.2-alpine3.21 AS builder
WORKDIR /app

# Install security updates
RUN apk update && apk upgrade && \
    apk add --no-cache libc6-compat && \
    rm -rf /var/cache/apk/*

# Copy package files
COPY package*.json ./

# Install all dependencies (including devDependencies)
RUN npm ci --ignore-scripts && \
    npm cache clean --force && \
    rm -rf ~/.npm

# Copy source code and config files
COPY src/ ./src/
COPY next.config.ts ./
COPY tsconfig.json ./
COPY tailwind.config.js ./
COPY postcss.config.mjs ./

# Disable Next.js telemetry for privacy and performance
ENV NEXT_TELEMETRY_DISABLED=1

# Build the Next.js application with standalone output
RUN npm run build && \
    # Remove unnecessary files to reduce transfer size
    rm -rf node_modules && \
    rm -rf src && \
    rm -rf *.config.* && \
    rm -rf tsconfig.json

# Production stage - Distroless for ultimate minimal size and security
FROM gcr.io/distroless/nodejs20-debian12:nonroot AS production

# Set working directory
WORKDIR /app

# Environment variables
ENV NODE_ENV=production
ENV PORT=3000
ENV NEXT_TELEMETRY_DISABLED=1

# Copy production dependencies from deps stage
COPY --from=deps --chown=nonroot:nonroot /app/node_modules ./node_modules

# Copy built application from builder stage
COPY --from=builder --chown=nonroot:nonroot /app/.next/standalone ./
COPY --from=builder --chown=nonroot:nonroot /app/.next/static ./.next/static

# Copy public assets (if any)
COPY --from=builder --chown=nonroot:nonroot /app/public ./public

# Expose port
EXPOSE 3000

# Start the application
CMD ["server.js"]
