name: Deploy Hello World App to GCP

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod
  push:
    branches: ["main"]

env:
  WORKING_DIR: ./infra
  IMAGE_NAME: hello-world-app
  GCP_REGION: europe-west2
  TF_VAR_env: ${{ github.event.inputs.environment || 'dev' }}
  # Generate dynamic tag
  TAG: ${{ github.sha }}

jobs:
  deploy-infrastructure:
    permissions:
      contents: read
      id-token: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      # BUILD AND PUSH DOCKER IMAGE FIRST
      - name: Build and Push Docker image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --push \
            -f ./infra/dockerfile \
            -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/hello-world-repo/${{ env.IMAGE_NAME }}:${{ env.TAG }} \
            -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/hello-world-repo/${{ env.IMAGE_NAME }}:latest \
            .

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          terraform init -backend-config="prefix=terraform/state/hello-world-app"

      # UPDATE TERRAFORM VARIABLE WITH NEW IMAGE TAG
      - name: Update container image in Terraform
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          # Update the container_image variable to use the new tag
          sed -i 's|container_image.*=.*|container_image = "${{ env.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/hello-world-repo/${{ env.IMAGE_NAME }}:${{ env.TAG }}"|g' vars/${{ env.TF_VAR_env }}.tfvars

      - name: Terraform Plan and Apply
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          terraform plan \
            -var-file="vars/${{ env.TF_VAR_env }}.tfvars" \
            -out=plan.tfplan
          terraform apply -auto-approve plan.tfplan

      - name: Get Cloud Run URL
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          echo "CLOUD_RUN_URL=$(terraform output -raw service_url)" >> $GITHUB_ENV

      - name: Show Deployment URL
        run: |
          echo "ðŸš€ Application deployed successfully!"
          echo "URL: ${{ env.CLOUD_RUN_URL }}"
